--------------------------------------------------------------------------------
-- Copyright (c) 1995-2003 Xilinx, Inc.
-- All Right Reserved.
--------------------------------------------------------------------------------
--   ____  ____ 
--  /   /\/   / 
-- /___/  \  /    Vendor: Xilinx 
-- \   \   \/     Version : 10.1.03
--  \   \         Application : ISE
--  /   /         Filename : shiftreg_spec.ant
-- /___/   /\     Timestamp : Mon Oct 21 20:59:15 2013
-- \   \  /  \ 
--  \___\/\___\ 
--
--Command: 
--Design Name: shiftreg_spec
--Device: Xilinx
--

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;
USE IEEE.STD_LOGIC_TEXTIO.ALL;
USE STD.TEXTIO.ALL;

ENTITY shiftreg_spec IS
END shiftreg_spec;

ARCHITECTURE testbench_arch OF shiftreg_spec IS
    FILE RESULTS: TEXT OPEN WRITE_MODE IS "D:\work\Projects\labs_vhdl\lab2\shiftreg_spec.ano";

    COMPONENT shiftreg
        PORT (
            CLK : In std_logic;
            S0 : In std_logic;
            S1 : In std_logic;
            SR : In std_logic;
            SL : In std_logic;
            invOE1 : In std_logic;
            invOE2 : In std_logic;
            invCLR : In std_logic;
            Q : InOut std_logic_vector (7 DownTo 0);
            Qa : Out std_logic;
            Qh : Out std_logic
        );
    END COMPONENT;

    SIGNAL CLK : std_logic := '0';
    SIGNAL S0 : std_logic := '0';
    SIGNAL S1 : std_logic := '0';
    SIGNAL SR : std_logic := '0';
    SIGNAL SL : std_logic := '0';
    SIGNAL invOE1 : std_logic := '0';
    SIGNAL invOE2 : std_logic := '0';
    SIGNAL invCLR : std_logic := '1';
    SIGNAL Q : std_logic_vector (7 DownTo 0) := "ZZZZZZZZ";
    SIGNAL Qa : std_logic := '0';
    SIGNAL Qh : std_logic := '0';

    SHARED VARIABLE TX_ERROR : INTEGER := 0;
    SHARED VARIABLE TX_OUT : LINE;

    constant PERIOD : time := 200 ns;
    constant DUTY_CYCLE : real := 0.5;
    constant OFFSET : time := 0 ns;

    BEGIN
        UUT : shiftreg
        PORT MAP (
            CLK => CLK,
            S0 => S0,
            S1 => S1,
            SR => SR,
            SL => SL,
            invOE1 => invOE1,
            invOE2 => invOE2,
            invCLR => invCLR,
            Q => Q,
            Qa => Qa,
            Qh => Qh
        );

        PROCESS    -- clock process for CLK
        BEGIN
            WAIT for OFFSET;
            CLOCK_LOOP : LOOP
                CLK <= '0';
                WAIT FOR (PERIOD - (PERIOD * DUTY_CYCLE));
                CLK <= '1';
                WAIT FOR (PERIOD * DUTY_CYCLE);
            END LOOP CLOCK_LOOP;
        END PROCESS;

        PROCESS    -- Annotation process for CLK
            VARIABLE TX_TIME : INTEGER := 0;

            PROCEDURE ANNOTATE_Qa(
                TX_TIME : INTEGER
            ) IS
                VARIABLE TX_STR : String(1 to 4096);
                VARIABLE TX_LOC : LINE;
            BEGIN
                STD.TEXTIO.write(TX_LOC, string'("Annotate["));
                STD.TEXTIO.write(TX_LOC, TX_TIME);
                STD.TEXTIO.write(TX_LOC, string'(", Qa, "));
                IEEE.STD_LOGIC_TEXTIO.write(TX_LOC, Qa);
                STD.TEXTIO.write(TX_LOC, string'("]"));
                TX_STR(TX_LOC.all'range) := TX_LOC.all;
                STD.TEXTIO.writeline(RESULTS, TX_LOC);
                STD.TEXTIO.Deallocate(TX_LOC);
            END;
            PROCEDURE ANNOTATE_Qh(
                TX_TIME : INTEGER
            ) IS
                VARIABLE TX_STR : String(1 to 4096);
                VARIABLE TX_LOC : LINE;
            BEGIN
                STD.TEXTIO.write(TX_LOC, string'("Annotate["));
                STD.TEXTIO.write(TX_LOC, TX_TIME);
                STD.TEXTIO.write(TX_LOC, string'(", Qh, "));
                IEEE.STD_LOGIC_TEXTIO.write(TX_LOC, Qh);
                STD.TEXTIO.write(TX_LOC, string'("]"));
                TX_STR(TX_LOC.all'range) := TX_LOC.all;
                STD.TEXTIO.writeline(RESULTS, TX_LOC);
                STD.TEXTIO.Deallocate(TX_LOC);
            END;
        BEGIN
            WAIT for 1 fs;
            ANNOTATE_Qa(0);
            ANNOTATE_Qh(0);
            WAIT for OFFSET;
            TX_TIME := TX_TIME + 0;
            ANNO_LOOP : LOOP
                --Rising Edge
                WAIT for 115 ns;
                TX_TIME := TX_TIME + 115;
                ANNOTATE_Qa(TX_TIME);
                ANNOTATE_Qh(TX_TIME);
                WAIT for 85 ns;
                TX_TIME := TX_TIME + 85;
            END LOOP ANNO_LOOP;
        END PROCESS;

        PROCESS
            BEGIN
                -- -------------  Current Time:  85ns
                WAIT FOR 85 ns;
                invCLR <= '0';
                -- -------------------------------------
                -- -------------  Current Time:  285ns
                WAIT FOR 200 ns;
                S0 <= '1';
                S1 <= '1';
                invCLR <= '1';
                Q <= "10101010";
                -- -------------------------------------
                -- -------------  Current Time:  485ns
                WAIT FOR 200 ns;
                S0 <= '0';
                invCLR <= '0';
                Q <= "ZZZZZZZZ";
                -- -------------------------------------
                -- -------------  Current Time:  685ns
                WAIT FOR 200 ns;
                S0 <= '1';
                invCLR <= '1';
                Q <= "10101010";
                -- -------------------------------------
                -- -------------  Current Time:  885ns
                WAIT FOR 200 ns;
                S1 <= '0';
                invCLR <= '0';
                Q <= "ZZZZZZZZ";
                -- -------------------------------------
                -- -------------  Current Time:  1085ns
                WAIT FOR 200 ns;
                SR <= '1';
                invCLR <= '1';
                -- -------------------------------------
                -- -------------  Current Time:  1285ns
                WAIT FOR 200 ns;
                SR <= '0';
                -- -------------------------------------
                -- -------------  Current Time:  1485ns
                WAIT FOR 200 ns;
                SR <= '1';
                -- -------------------------------------
                -- -------------  Current Time:  1685ns
                WAIT FOR 200 ns;
                SR <= '0';
                -- -------------------------------------
                -- -------------  Current Time:  1885ns
                WAIT FOR 200 ns;
                S0 <= '0';
                -- -------------------------------------
                -- -------------  Current Time:  2285ns
                WAIT FOR 400 ns;
                S1 <= '1';
                SL <= '1';
                -- -------------------------------------
                -- -------------  Current Time:  2485ns
                WAIT FOR 200 ns;
                SL <= '0';
                -- -------------------------------------
                -- -------------  Current Time:  2685ns
                WAIT FOR 200 ns;
                SL <= '1';
                -- -------------------------------------
                -- -------------  Current Time:  2885ns
                WAIT FOR 200 ns;
                SL <= '0';
                -- -------------------------------------
                -- -------------  Current Time:  3085ns
                WAIT FOR 200 ns;
                S1 <= '0';
                -- -------------------------------------
                WAIT FOR 1115 ns;

                STD.TEXTIO.write(TX_OUT, string'("Total[]"));
                STD.TEXTIO.writeline(RESULTS, TX_OUT);
                ASSERT (FALSE) REPORT
                    "Success! Simulation for annotation completed"
                    SEVERITY FAILURE;
            END PROCESS;

    END testbench_arch;

